name: Create and publish a package
on:
  push:
    branches: ['rework']
jobs:
  build-backend:
    name: Build and Test Cinnabarlab API
    runs-on: ubuntu-latest
    env:
      working-directory: './backend'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Restore dependencies
      run: dotnet restore Cinnabarlab.sln
      working-directory: ${{env.working-directory}}
    - run: dotnet build --no-restore
      working-directory: ${{env.working-directory}}    
    - run: dotnet test --no-build --verbosity normal
      working-directory: ${{env.working-directory}}

  build-frontend:
    name: Build Cinnabarlab Web Frontend
    runs-on: ubuntu-latest
    env:
      working-directory: './frontend/cinnabarlab-frontend'
    steps:
      - uses: actions/checkout@v2
      - name: npm install
        run: npm install
        working-directory: ${{env.working-directory}}
      - name: npm build
        run: npm run build
        working-directory: ${{env.working-directory}}

  test-frontend:
    name: Test Cinnabarlab Web Frontend
    runs-on: ubuntu-latest
    env:
      working-directory: './frontend/cinnabarlab-frontend'
    needs: build-frontend
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x, 14.x]
    steps: 
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@main
      - name: npm install
        run: npm install
        working-directory: ${{env.working-directory}}
        env:
          CI: true
      - name: npm test
        run: npm test
        working-directory: ${{env.working-directory}}
        env:
          CI: true

  build-and-publish:
    name: Build and Publish Cinnabarlab
    runs-on: ubuntu-latest
    needs: [test-frontend, build-backend]
    permissions: 
      contents: read
      packages: write 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            docker.pkg.github.com/${{ github.repository }}:${{github.sha}}
            docker.pkg.github.com/${{ github.repository }}:latest